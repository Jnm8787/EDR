{"ast":null,"code":"var _jsxFileName = \"/Users/josenmolinapaez/projects/EDR/src/components/Employees.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Employees = props => {\n  // The API response of dates looks like: 1972-08-30T05:36:46.599Z\n  // That's difficult to read, so formatDate sets up dates as ??-??-???? in Month-Day-Year format.\n  function formatDate(date) {\n    const dateArray = date.split(\"-\");\n    const year = dateArray[0];\n    const month = dateArray[1];\n    const dayArray = dateArray[2].split(\"T\");\n    const day = dayArray[0];\n    const formattedDate = [month, day, year].join(\"-\");\n    return formattedDate;\n  } // dateOfBirth variable allows me to cleanly call formatDate on the props in the below JSX\n\n\n  let dateOfBirth = formatDate(props.dob);\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: \"tr\",\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: props.firstName,\n        src: props.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [props.firstName, \" \", props.lastName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [props.phone, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: dateOfBirth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Employees;\nexport default Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"sources":["/Users/josenmolinapaez/projects/EDR/src/components/Employees.js"],"names":["React","Employees","props","formatDate","date","dateArray","split","year","month","dayArray","day","formattedDate","join","dateOfBirth","dob","firstName","icon","lastName","email","phone","address"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B;AACA;AACA,WAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,UAAMC,SAAS,GAAGD,IAAI,CAACE,KAAL,CAAW,GAAX,CAAlB;AACA,UAAMC,IAAI,GAAGF,SAAS,CAAC,CAAD,CAAtB;AACA,UAAMG,KAAK,GAAGH,SAAS,CAAC,CAAD,CAAvB;AACA,UAAMI,QAAQ,GAAGJ,SAAS,CAAC,CAAD,CAAT,CAAaC,KAAb,CAAmB,GAAnB,CAAjB;AACA,UAAMI,GAAG,GAAGD,QAAQ,CAAC,CAAD,CAApB;AACA,UAAME,aAAa,GAAG,CAACH,KAAD,EAAQE,GAAR,EAAaH,IAAb,EAAmBK,IAAnB,CAAwB,GAAxB,CAAtB;AACA,WAAOD,aAAP;AACD,GAX0B,CAa3B;;;AACA,MAAIE,WAAW,GAAGV,UAAU,CAACD,KAAK,CAACY,GAAP,CAA5B;AAEA,sBACE;AAAI,IAAA,SAAS,EAAC,IAAd;AAAA,4BACE;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEZ,KAAK,CAACa,SAAhB;AAA2B,QAAA,GAAG,EAAEb,KAAK,CAACc;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,iBACGd,KAAK,CAACa,SADT,OACqBb,KAAK,CAACe,QAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAA,gBAAKf,KAAK,CAACgB;AAAX;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,iBAAKhB,KAAK,CAACiB,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA,gBAAKN;AAAL;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA,gBAAKX,KAAK,CAACkB;AAAX;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA9BD;;KAAMnB,S;AAgCN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\n\nconst Employees = (props) => {\n  // The API response of dates looks like: 1972-08-30T05:36:46.599Z\n  // That's difficult to read, so formatDate sets up dates as ??-??-???? in Month-Day-Year format.\n  function formatDate(date) {\n    const dateArray = date.split(\"-\");\n    const year = dateArray[0];\n    const month = dateArray[1];\n    const dayArray = dateArray[2].split(\"T\");\n    const day = dayArray[0];\n    const formattedDate = [month, day, year].join(\"-\");\n    return formattedDate;\n  }\n\n  // dateOfBirth variable allows me to cleanly call formatDate on the props in the below JSX\n  let dateOfBirth = formatDate(props.dob);\n\n  return (\n    <tr className=\"tr\">\n      <td>\n        <img alt={props.firstName} src={props.icon} />\n      </td>\n      <td>\n        {props.firstName} {props.lastName}\n      </td>\n      <td>{props.email}</td>\n      <td>{props.phone} </td>\n      <td>{dateOfBirth}</td>\n      <td>{props.address}</td>\n    </tr>\n  );\n};\n\nexport default Employees;\n"]},"metadata":{},"sourceType":"module"}